{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dereklaurel/hackernews/src/components/SearchBar/SearchBar.js\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { connect } from 'react-redux';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      searchResults: []\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let term = this.props.inputValue;\n    fetch(`https://hn.algolia.com/api/v1/search?query=${term}`, {\n      method: 'GET'\n    }).then(res => res.json()).then(data => this.setState({\n      searchResults: data.hits\n    }));\n  }\n\n  render() {\n    const searchedResults = this.state.searchResults.map((result, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"author\",\n          children: result.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"url\",\n          children: result.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.props.inputValue,\n            onChange: this.props.inputChange,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            type: \"submit\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: searchedResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: e => {\n      const action = {\n        type: 'INPUT_CHANGE',\n        text: e.target.value\n      };\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/dereklaurel/hackernews/src/components/SearchBar/SearchBar.js"],"names":["React","connect","SearchBar","Component","constructor","props","handleSubmit","bind","state","searchResults","e","preventDefault","term","inputValue","fetch","method","then","res","json","data","setState","hits","render","searchedResults","map","result","i","author","title","url","inputChange","mapStateToProps","mapDispatchToProps","dispatch","action","type","text","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SearchBar.css'\nimport { connect } from 'react-redux';\n\n\n\n\n\nclass SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            searchResults: []\n        }\n    }\n\n  \n\n\n    handleSubmit(e){\n        e.preventDefault();\n        let term = this.props.inputValue;\n      fetch(`https://hn.algolia.com/api/v1/search?query=${term}`, { method: 'GET'}).then(res => res.json()).then(data => this.setState({searchResults: data.hits}));\n    }\n\n    render(){\n        const searchedResults = this.state.searchResults.map((result,i) => {\n            return  <div key={i}><span className=\"author\">{result.author}</span>\n              <p className=\"title\">{result.title}</p>\n              <span className=\"url\">{result.url}</span></div>\n          })\n            return <><div className=\"form\">\n                <form onSubmit={this.handleSubmit}>\n                    <input value={this.props.inputValue} onChange={this.props.inputChange} type=\"text\"></input>\n                    <button className=\"button\" type=\"submit\">search</button>\n                </form>\n                    </div>\n\n                    <h1>Results</h1>\n                    <div>{searchedResults}</div></>\n                \n                  \n    }\n}\n\nconst mapStateToProps = state => {\nreturn {\n    inputValue: state.inputValue\n}\n}\n\nconst mapDispatchToProps = dispatch => {\nreturn {\n    inputChange: (e) => {\n        const action = {type: 'INPUT_CHANGE', text: e.target.value};\n       dispatch(action);\n    }\n}\n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchBar);"]},"metadata":{},"sourceType":"module"}