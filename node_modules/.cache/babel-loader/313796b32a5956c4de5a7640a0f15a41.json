{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dereklaurel/hackernews/src/components/SearchBar/SearchBar.js\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { connect } from 'react-redux';\nimport SearchResults from '../SearchResults/SearchResults';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let term = this.props.inputValue;\n    fetch(`https://hn.algolia.com/api/v1/search?query=${term}`, {\n      method: 'GET'\n    }).then(res => res.json()).then(results => this.setState({\n      results: SearchResults\n    }));\n    console.log('results');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.props.inputValue,\n          onChange: this.props.inputChange,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: e => {\n      console.log('changed', e.target.value);\n      const action = {\n        type: 'INPUT_CHANGE',\n        text: e.target.value\n      };\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/dereklaurel/hackernews/src/components/SearchBar/SearchBar.js"],"names":["React","connect","SearchResults","SearchBar","Component","constructor","props","handleSubmit","bind","e","preventDefault","term","inputValue","fetch","method","then","res","json","results","setState","console","log","render","inputChange","mapStateToProps","state","mapDispatchToProps","dispatch","target","value","action","type","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAMA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAKDD,EAAAA,YAAY,CAACE,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWM,UAAtB;AACFC,IAAAA,KAAK,CAAE,8CAA6CF,IAAK,EAApD,EAAuD;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAvD,CAAL,CAA8EC,IAA9E,CAAmFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA1F,EAAsGF,IAAtG,CAA2GG,OAAO,IAAI,KAAKC,QAAL,CAAc;AAACD,MAAAA,OAAO,EAAEhB;AAAV,KAAd,CAAtH;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACH;AAAM,QAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA,gCACI;AAAO,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM,UAAzB;AAAqC,UAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWiB,WAA1D;AAAuE,UAAA,IAAI,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAQP;;AA1BmC;;AA6BxC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AACjC,SAAO;AACHb,IAAAA,UAAU,EAAEa,KAAK,CAACb;AADf,GAAP;AAGC,CAJD;;AAMA,MAAMc,kBAAkB,GAAGC,QAAQ,IAAI;AACvC,SAAO;AACHJ,IAAAA,WAAW,EAAGd,CAAD,IAAO;AAChBW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,CAAC,CAACmB,MAAF,CAASC,KAAhC;AACA,YAAMC,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,IAAI,EAAEvB,CAAC,CAACmB,MAAF,CAASC;AAAtC,OAAf;AACDF,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACF;AALE,GAAP;AAOC,CARD;;AAYA,eAAe7B,OAAO,CAACuB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CvB,SAA5C,CAAf","sourcesContent":["import React from 'react';\nimport './SearchBar.css'\nimport { connect } from 'react-redux';\nimport SearchResults from '../SearchResults/SearchResults';\n\n\n\n\n\nclass SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  \n\n\n    handleSubmit(e){\n        e.preventDefault();\n        let term = this.props.inputValue;\n      fetch(`https://hn.algolia.com/api/v1/search?query=${term}`, { method: 'GET'}).then(res => res.json()).then(results => this.setState({results: SearchResults}))\n      console.log('results');\n    }\n\n    render(){\n            return <div className=\"form\">\n                <form onSubmit={this.handleSubmit}>\n                    <input value={this.props.inputValue} onChange={this.props.inputChange} type=\"text\"></input>\n                    <button className=\"button\" type=\"submit\">search</button>\n                </form>\n                    </div>\n                \n                  \n    }\n}\n\nconst mapStateToProps = state => {\nreturn {\n    inputValue: state.inputValue\n}\n}\n\nconst mapDispatchToProps = dispatch => {\nreturn {\n    inputChange: (e) => {\n        console.log('changed', e.target.value);\n        const action = {type: 'INPUT_CHANGE', text: e.target.value};\n       dispatch(action);\n    }\n}\n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchBar);"]},"metadata":{},"sourceType":"module"}